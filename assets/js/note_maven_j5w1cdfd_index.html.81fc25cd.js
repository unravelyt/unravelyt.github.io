"use strict";(self.webpackChunkunravely_blog=self.webpackChunkunravely_blog||[]).push([[7496],{8888:(s,t,i)=>{i.r(t),i.d(t,{comp:()=>l,data:()=>r});var e=i(6254);const a=i.p+"assets/img/maven_jar.ee1b884b.jpg",n={},l=(0,i(1021).A)(n,[["render",function(s,t){return(0,e.uX)(),(0,e.CE)("div",null,t[0]||(t[0]=[(0,e.Fv)('<h2 id="scope依赖范围" tabindex="-1"><a class="header-anchor" href="#scope依赖范围"><span>scope依赖范围</span></a></h2><table><thead><tr><th><strong>scope取值</strong></th><th><strong>有效范围</strong></th><th><strong>依赖传递</strong></th><th><strong>例子</strong></th></tr></thead><tbody><tr><td><strong>compile</strong></td><td>all</td><td>是</td><td>spring-core</td></tr><tr><td><strong>provided</strong></td><td>compile, test</td><td><strong>否</strong></td><td>servlet-api</td></tr><tr><td><strong>runtime</strong></td><td>runtime, test</td><td>是</td><td>JDBC驱动</td></tr><tr><td><strong>test</strong></td><td>test</td><td><strong>否</strong></td><td>JUnit</td></tr><tr><td><strong>system</strong></td><td>compile, test</td><td>是</td><td></td></tr></tbody></table><ol><li><strong>compile</strong>：为默认的依赖有效范围。<code>如果没有明确指定依赖有效范围，则为默认值。在编译、运行、测试时均有效。</code></li><li><strong>provided</strong> ：在编译、测试时有效，但是在运行时无效。<code>打包的时候不用包进去，别的设施(Web Container)会提供。该依赖理论上可以参与编译，测试，运行等周期。相当于compile，但是在打包阶段做了exclude的动作。 例如：servlet-api，运行项目时，容器已经提供，就不需要Maven重复地引入一遍了。</code></li><li><strong>runtime</strong> ：在运行、测试时有效，但是在编译代码时无效。 <code>在终端的项目（非开源，企业内部系统）中，和compile区别不是很大。例如：JDBC驱动实现，项目代码编译只需要JDK提供的JDBC接口，只有在测试或运行项目时才需要实现上述接口的具体JDBC驱动。 另外runntime的依赖通常和optional搭配使用，optional为true。我可以用A实现，也可以用B实现。</code></li><li><strong>test</strong> ：只在测试时有效，包括测试代码的编译，执行。例如：JUnit。 <code>test表示只能在src下的test文件夹下面才可以使用，你如果在a项目中引入了这个依赖，在b项目引入了a项目作为依赖，在b项目中这个注解不会生效，因为scope为test时无法传递依赖。</code></li><li><strong>system</strong> ：在编译、测试时有效，但是在运行时无效。 <code>和provided的区别是，使用system范围的依赖时必须通过systemPath元素显式地指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析的，而且往往与本机系统绑定，可能造成构建的不可移植，因此应该谨慎使用。</code></li></ol><h2 id="将本地jar包添加到本地仓库" tabindex="-1"><a class="header-anchor" href="#将本地jar包添加到本地仓库"><span>将本地jar包添加到本地仓库</span></a></h2><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mvn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install:install-file</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-Dfile=hitachivantara-java-sdk-core-0.4.457.jar</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;-DgroupId=com.hitachivantara&quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-DartifactId=hitachivantara-java-sdk-core</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;-Dversion=0.4.457&quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-Dpackaging=jar</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mvn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install:install-file</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-Dfile=hitachivantara-java-sdk-hcp-0.4.457.jar</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-DgroupId=com.hitachivantara</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-DartifactId=hitachivantara-java-sdk-hcp</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-Dversion=0.4.457</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-Dpackaging=jar</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="找出重复引入的jar" tabindex="-1"><a class="header-anchor" href="#找出重复引入的jar"><span>找出重复引入的jar</span></a></h2><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mvn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dependency:tree</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Dverbose</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Dincludes=org.apache.poi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+a+'" alt="maven_jar.jpg"></p>',8)]))}]]),r=JSON.parse('{"path":"/note_maven/j5w1cdfd/","title":"maven常用命令","lang":"zh-CN","frontmatter":{"title":"maven常用命令","createTime":"2024/11/07","permalink":"/note_maven/j5w1cdfd/","description":"scope依赖范围 compile：为默认的依赖有效范围。如果没有明确指定依赖有效范围，则为默认值。在编译、运行、测试时均有效。 provided ：在编译、测试时有效，但是在运行时无效。打包的时候不用包进去，别的设施(Web Container)会提供。该依赖理论上可以参与编译，测试，运行等周期。相当于compile，但是在打包阶段做了exclude...","head":[["meta",{"property":"og:url","content":"https://www.unravely.press/note_maven/j5w1cdfd/"}],["meta",{"property":"og:site_name","content":"Unravely"}],["meta",{"property":"og:title","content":"maven常用命令"}],["meta",{"property":"og:description","content":"scope依赖范围 compile：为默认的依赖有效范围。如果没有明确指定依赖有效范围，则为默认值。在编译、运行、测试时均有效。 provided ：在编译、测试时有效，但是在运行时无效。打包的时候不用包进去，别的设施(Web Container)会提供。该依赖理论上可以参与编译，测试，运行等周期。相当于compile，但是在打包阶段做了exclude..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-16T17:28:23.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-16T17:28:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"maven常用命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-16T17:28:23.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"scope依赖范围","slug":"scope依赖范围","link":"#scope依赖范围","children":[]},{"level":2,"title":"将本地jar包添加到本地仓库","slug":"将本地jar包添加到本地仓库","link":"#将本地jar包添加到本地仓库","children":[]},{"level":2,"title":"找出重复引入的jar","slug":"找出重复引入的jar","link":"#找出重复引入的jar","children":[]}],"readingTime":{"minutes":1.97,"words":590},"git":{"createdTime":1731061423000,"updatedTime":1731778103000,"contributors":[{"name":"unravely","email":"yutong9717@163.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/note_maven/maven常用命令.md","bulletin":false}')}}]);