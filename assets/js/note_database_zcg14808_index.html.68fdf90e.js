"use strict";(self.webpackChunkunravely_blog=self.webpackChunkunravely_blog||[]).push([[4805],{538:(e,s,i)=>{i.r(s),i.d(s,{comp:()=>t,data:()=>l});var a=i(6254);const n={},t=(0,i(1021).A)(n,[["render",function(e,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<blockquote><p>参考：<a href="https://blog.csdn.net/qq_44483424/article/details/121385545" target="_blank" rel="noopener noreferrer">数据库索引详解</a></p><p>https://github.com/digoal/blog</p></blockquote><h2 id="_1-索引结构" tabindex="-1"><a class="header-anchor" href="#_1-索引结构"><span>1. 索引结构</span></a></h2><p>mysql5.5以上的默认存储引擎innodb，只显式支持BTree( 事实上从数据结构上来讲是B+树，mysql称之为BTree)索引，对于频繁访问的表，innodb会建立自适应hash索引，</p><p>即在B树索引基础上建立hash索引，可以显著提高查找效率，用户是无法自己指定的，除此之外还有Hash索引和全文索引（fullText索引）。</p><h3 id="_1-1-btree索引" tabindex="-1"><a class="header-anchor" href="#_1-1-btree索引"><span>1.1. BTree索引</span></a></h3><p>BTree,顾名思义，就是所有的索引节点都按照balance tree的数据结构来存储。BTree结构可以显著减少定位记录时所经历的中间过程，从而加快存取速度。 Btree中，每个结点包含：</p><ol><li>本结点所含关键字的个数；</li><li>指向父结点的指针；</li><li>关键字；</li><li>指向子结点的指针；</li></ol><p>更详细的B+树介绍参考https://www.cnblogs.com/yangecnu/p/Introduce-B-Tree-and-B-Plus-Tree.html</p><h3 id="_1-2-hash索引" tabindex="-1"><a class="header-anchor" href="#_1-2-hash索引"><span>1.2. Hash索引</span></a></h3><p>Hash 索引由于使用了hash表结构，其检索效率很高，索引的检索可以一次定位，不像B+树索引需要从根节点到枝节点， 所以 Hash 索引的查询效率要远高于 B+树 索引。但是，Hash索引的使用范围非常有限。</p><ol><li>在MySQL中，只有HEAP/MEMORY引擎表才能支持哈希索引，InnoDB引擎的自适应哈希索引（adaptive hash index）不能在创建索引时指定。</li><li>Hash索引仅支持=，&gt;=,&lt;=这几种条件运算，不支持排序，范围内查找，like等查询。</li><li>Hash索引不支持组合索引中部分索引的查找。</li><li>当Hash值重复较多时，索引速度可能不如BTree索引。</li></ol><h3 id="_1-3-fulltext索引" tabindex="-1"><a class="header-anchor" href="#_1-3-fulltext索引"><span>1.3. FullText索引</span></a></h3><p>Full-text索引就是我们常说的全文索引，他的存储结构也是Btree。主要是为了解决在我们需要用like查询的低效问题。</p><p>只能解决’xxx%’的like查询。如：字段数据为ABCDE，索引建立为A、AB、ABC、ABCD、ABCDE五个。</p><h2 id="_2-索引类型" tabindex="-1"><a class="header-anchor" href="#_2-索引类型"><span>2. 索引类型</span></a></h2><p>索引一般有：普通索引，唯一索引，复合索引这几种类型。</p><p>唯一索引：唯一索引要求字段中不会出现重复数据。</p><p>复合索引：将多个字段组合起来作为索引，必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用。</p><h2 id="_3-索引操作" tabindex="-1"><a class="header-anchor" href="#_3-索引操作"><span>3. 索引操作</span></a></h2><h3 id="_3-1-mysql创建索引" tabindex="-1"><a class="header-anchor" href="#_3-1-mysql创建索引"><span>3.1. MySql创建索引</span></a></h3><p>建表的时候加索引</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">create</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> table</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> book</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    id               </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">bigint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> auto_increment </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">primary key</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> not null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    title            </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">varchar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">100</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) comment </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">标题</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">             varchar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">100</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">),</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    author           </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">varchar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">100</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">),</span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    index</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index_1(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, author)</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) ENGINE </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> InnoDB </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CHARACTER</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> SET</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> utf8mb4 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">COLLATE</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> utf8mb4_unicode_ci COMMENT </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">书</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>建立索引：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span> create index 索引名 on 表名（索引字段名）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>建立唯一索引：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span> create unique index 索引名 on 表名（索引字段名）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>建立复合索引：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>create index 索引名 on 表名（索引字段名1，索引字段名2...）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>删除索引：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>drop index 索引名 on 表名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看表中索引：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>show index from 表名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看索引是否命中 Mysql:当结果的type为 index时索引命中</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>explain +sql语句</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Oracle:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>explain plan for+sql语句</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-2-pgsql创建索引" tabindex="-1"><a class="header-anchor" href="#_3-2-pgsql创建索引"><span>3.2. PgSql创建索引</span></a></h3><p>参考：<a href="https://developer.aliyun.com/article/111793" target="_blank" rel="noopener noreferrer">PostgreSQL 9种索引的原理和应用场景</a></p><p>不管是单列索引还是组合索引，该索引必须是在 WHERE 子句的过滤条件中使用非常频繁的列。 如果只有一列被使用到，就选择单列索引，如果有多列就使用组合索引。</p><p><strong>单列索引：</strong> 是一个只基于表的一个列上创建的索引，基本语法如下：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> INDEX</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> index_name</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> ON</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> table_name (column_name);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">简化：</span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">create</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> index</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> index_name2</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> on</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> table_name </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">using</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> btree (id);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组合索引：</strong> 是基于表的多列上创建的索引，基本语法如下：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> INDEX</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> index_name</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> ON</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> table_name (column1_name, column2_name);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>删除索引：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">DROP</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> INDEX</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index_name;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>分析语句：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">explain analyze </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> name</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> test </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> id </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10000</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>唯一索引</p><p>使用唯一索引不仅是为了性能，同时也为了数据的完整性。唯一索引不允许任何重复的值插入到表中。基本语法如下：</p><p>CREATE UNIQUE INDEX index_name on table_name (column_name);</p><h2 id="_4-命中索引" tabindex="-1"><a class="header-anchor" href="#_4-命中索引"><span>4. 命中索引</span></a></h2><h3 id="_4-1-避免判断null值" tabindex="-1"><a class="header-anchor" href="#_4-1-避免判断null值"><span>4.1. 避免判断null值</span></a></h3><p>应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where num is null</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where num=0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-2-避免不等值判断" tabindex="-1"><a class="header-anchor" href="#_4-2-避免不等值判断"><span>4.2. 避免不等值判断</span></a></h3><p>应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则引擎将放弃使用索引而进行全表扫描。</p><h3 id="_4-3-避免使用or逻辑" tabindex="-1"><a class="header-anchor" href="#_4-3-避免使用or逻辑"><span>4.3. 避免使用or逻辑</span></a></h3><p>应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where num=1 or num=2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以使用union all来进行查询来命中索引如：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where num=1 union all select id from t where num=2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-4-慎用in和not-in逻辑" tabindex="-1"><a class="header-anchor" href="#_4-4-慎用in和not-in逻辑"><span>4.4. 慎用in和not in逻辑</span></a></h3><p>in 和 not in 也要慎用，否则会导致全表扫描，如：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t1 where num in(select id from t2 where id &gt; 10)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时外层查询会全表扫描，不使用索引。可以修改为：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t1,(select id from t1 where id &gt; 10)t2 where t1.id = t2.id</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时索引被使用，可以明显提升查询效率。</p><h3 id="_4-5-注意模糊查询" tabindex="-1"><a class="header-anchor" href="#_4-5-注意模糊查询"><span>4.5. 注意模糊查询</span></a></h3><p>下面的查询也将导致全表扫描：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where name like &#39;%abc%&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不要在like条件左边加&#39;%&#39;,这样不会走索引模糊查询如果是必要条件时，可以使用</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where name like &#39;abc%&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>来实现模糊查询，此时索引将被使用。如果头匹配是必要的，可以使用elasticsearch等全文搜索引擎。</p><h3 id="_4-6-避免字段计算" tabindex="-1"><a class="header-anchor" href="#_4-6-避免字段计算"><span>4.6. 避免字段计算</span></a></h3><p>应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where num/2=100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>应改为:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where num=100*2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-7-避免进行函数操作" tabindex="-1"><a class="header-anchor" href="#_4-7-避免进行函数操作"><span>4.7. 避免进行函数操作</span></a></h3><p>应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where substring(name,1,3)=&#39;abc&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>name以abc开头的id</p><p>应改为:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select id from t where name like &#39;abc%&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-8-左边避免表达式运算" tabindex="-1"><a class="header-anchor" href="#_4-8-左边避免表达式运算"><span>4.8. “=”左边避免表达式运算</span></a></h3><p>不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</p><h3 id="_4-9-组合索引使用" tabindex="-1"><a class="header-anchor" href="#_4-9-组合索引使用"><span>4.9. 组合索引使用</span></a></h3><p>在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。</p><h3 id="_4-10-exists" tabindex="-1"><a class="header-anchor" href="#_4-10-exists"><span>4.10. exists</span></a></h3><p>很多时候用 exists 代替 in 是一个好的选择：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select num from a where num in(select num from b)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用下面的语句替换：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>select num from a where exists(select 1 from b where num=a.num)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',95)]))}]]),l=JSON.parse('{"path":"/note_database/zcg14808/","title":"MySql索引类型和命中规则","lang":"zh-CN","frontmatter":{"title":"MySql索引类型和命中规则","createTime":"2024/11/17 01:19:42","permalink":"/note_database/zcg14808/","description":"参考：数据库索引详解 https://github.com/digoal/blog 1. 索引结构 mysql5.5以上的默认存储引擎innodb，只显式支持BTree( 事实上从数据结构上来讲是B+树，mysql称之为BTree)索引，对于频繁访问的表，innodb会建立自适应hash索引， 即在B树索引基础上建立hash索引，可以显著提高查找效率，...","head":[["meta",{"property":"og:url","content":"https://www.unravely.press/note_database/zcg14808/"}],["meta",{"property":"og:site_name","content":"Unravely"}],["meta",{"property":"og:title","content":"MySql索引类型和命中规则"}],["meta",{"property":"og:description","content":"参考：数据库索引详解 https://github.com/digoal/blog 1. 索引结构 mysql5.5以上的默认存储引擎innodb，只显式支持BTree( 事实上从数据结构上来讲是B+树，mysql称之为BTree)索引，对于频繁访问的表，innodb会建立自适应hash索引， 即在B树索引基础上建立hash索引，可以显著提高查找效率，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T09:48:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T09:48:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySql索引类型和命中规则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-25T09:48:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 索引结构","slug":"_1-索引结构","link":"#_1-索引结构","children":[{"level":3,"title":"1.1. BTree索引","slug":"_1-1-btree索引","link":"#_1-1-btree索引","children":[]},{"level":3,"title":"1.2. Hash索引","slug":"_1-2-hash索引","link":"#_1-2-hash索引","children":[]},{"level":3,"title":"1.3. FullText索引","slug":"_1-3-fulltext索引","link":"#_1-3-fulltext索引","children":[]}]},{"level":2,"title":"2. 索引类型","slug":"_2-索引类型","link":"#_2-索引类型","children":[]},{"level":2,"title":"3. 索引操作","slug":"_3-索引操作","link":"#_3-索引操作","children":[{"level":3,"title":"3.1. MySql创建索引","slug":"_3-1-mysql创建索引","link":"#_3-1-mysql创建索引","children":[]},{"level":3,"title":"3.2. PgSql创建索引","slug":"_3-2-pgsql创建索引","link":"#_3-2-pgsql创建索引","children":[]}]},{"level":2,"title":"4. 命中索引","slug":"_4-命中索引","link":"#_4-命中索引","children":[{"level":3,"title":"4.1. 避免判断null值","slug":"_4-1-避免判断null值","link":"#_4-1-避免判断null值","children":[]},{"level":3,"title":"4.2. 避免不等值判断","slug":"_4-2-避免不等值判断","link":"#_4-2-避免不等值判断","children":[]},{"level":3,"title":"4.3. 避免使用or逻辑","slug":"_4-3-避免使用or逻辑","link":"#_4-3-避免使用or逻辑","children":[]},{"level":3,"title":"4.4. 慎用in和not in逻辑","slug":"_4-4-慎用in和not-in逻辑","link":"#_4-4-慎用in和not-in逻辑","children":[]},{"level":3,"title":"4.5. 注意模糊查询","slug":"_4-5-注意模糊查询","link":"#_4-5-注意模糊查询","children":[]},{"level":3,"title":"4.6. 避免字段计算","slug":"_4-6-避免字段计算","link":"#_4-6-避免字段计算","children":[]},{"level":3,"title":"4.7. 避免进行函数操作","slug":"_4-7-避免进行函数操作","link":"#_4-7-避免进行函数操作","children":[]},{"level":3,"title":"4.8. “=”左边避免表达式运算","slug":"_4-8-左边避免表达式运算","link":"#_4-8-左边避免表达式运算","children":[]},{"level":3,"title":"4.9. 组合索引使用","slug":"_4-9-组合索引使用","link":"#_4-9-组合索引使用","children":[]},{"level":3,"title":"4.10. exists","slug":"_4-10-exists","link":"#_4-10-exists","children":[]}]}],"readingTime":{"minutes":6.05,"words":1815},"git":{"createdTime":1731778103000,"updatedTime":1735120084000,"contributors":[{"name":"banxia","email":"yutong9717@163.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/note_database/2.MySQL/索引类型和命中规则.md","bulletin":false}')}}]);