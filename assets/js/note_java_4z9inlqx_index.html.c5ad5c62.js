"use strict";(self.webpackChunkunravely_blog=self.webpackChunkunravely_blog||[]).push([[4162],{7793:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>l,data:()=>n});var e=a(6254);const t={},l=(0,a(1021).A)(t,[["render",function(s,i){return(0,e.uX)(),(0,e.CE)("div",null,i[0]||(i[0]=[(0,e.Fv)('<h2 id="_1-使用resourceutils获取" tabindex="-1"><a class="header-anchor" href="#_1-使用resourceutils获取"><span>1. 使用ResourceUtils获取</span></a></h2><blockquote><p>导包：import org.springframework.util.ResourceUtils;</p></blockquote><h3 id="_1-1-获取文件绝对路径" tabindex="-1"><a class="header-anchor" href="#_1-1-获取文件绝对路径"><span>1.1 获取文件绝对路径</span></a></h3><ul><li>先获取绝对路径地址，然后通过地址生成File文件</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ResourceUtils</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getURL</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ResourceUtils</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">CLASSPATH_URL_PREFIX</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">logback.xml</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getPath</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">文件绝对路径=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // D:/ideaProject/treasure-chest/wshoto/target/classes/logback.xml</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">FileInputStream</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> inputStream1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> FileInputStream</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-直接获取文件" tabindex="-1"><a class="header-anchor" href="#_1-2-直接获取文件"><span>1.2 直接获取文件</span></a></h3><ul><li>1.1 的简略版本，省去了获取绝对路径</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">File</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ResourceUtils</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getFile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ResourceUtils</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">CLASSPATH_URL_PREFIX</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">logback.xml</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-类加载器获取" tabindex="-1"><a class="header-anchor" href="#_2-类加载器获取"><span>2. 类加载器获取</span></a></h2><h3 id="_2-1-类加载器种类" tabindex="-1"><a class="header-anchor" href="#_2-1-类加载器种类"><span>2.1 类加载器种类</span></a></h3><ol><li><strong>引导类加载器(Bootstrap CLassLoader)</strong> 它是由本地代码(c/c++)实现的，你根本拿不到他的引用，但是他实际存在，并且加载一些重要的类，它加载(%JAVA_HOME%\\jre\\lib),如rt.jar(runtime)、i18n.jar等，这些是Java的核心类。 他是用原生代码来实现的，并不继承自 java.lang.ClassLoader。</li><li><strong>扩展类加载器(Extension CLassLoader)</strong> 虽说能拿到，但是我们在实践中很少用到它，它主要加载扩展目录下的jar包， %JAVA_HOME%\\lib\\ext</li><li><strong>系统类加载器(System CLassLoader)</strong> 它主要加载我们应用程序中的类，如Test,或者用到的第三方包,如jdbc驱动包等。 这里的父类加载器与类中继承概念要区分，它们在class定义上是没有父子关系的。</li></ol><h3 id="_2-2-获取类加载器" tabindex="-1"><a class="header-anchor" href="#_2-2-获取类加载器"><span>2.2 获取类加载器：</span></a></h3><ol><li>获取加载当前类的类加载器，可能是&quot;启动类加载器&quot;、“拓展类加载器”、&quot;系统类加载器&quot;等，取决于当前类是由哪个加载器加载的；</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//获取当前类的加载器</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClassLoader</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> classLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>获取当前线程上下文的类加载器，用户可以自己设置，java se环境下一般是AppClassLoader、java ee环境下一般是WebappClassLoader</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//获取当前线程上下文类加载器</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClassLoader</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> contextClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Thread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">currentThread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getContextClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>获取系统类加载器 System CLassLoader</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//获取系统类加载器 System CLassLoader</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClassLoader</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> systemClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getSystemClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>获取当前线程的ClassLoader</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClassLoader</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> contextClassLoader1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Thread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">currentThread</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">().</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getContextClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-3-通过类加载器获取资源" tabindex="-1"><a class="header-anchor" href="#_2-3-通过类加载器获取资源"><span>2.3 通过类加载器获取资源</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ClassLoader</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> loader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getSystemClassLoader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">InputStream</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> inputStream2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> loader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getResourceAsStream</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">logback.xml</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-classpathresource获取文件-推荐" tabindex="-1"><a class="header-anchor" href="#_3-classpathresource获取文件-推荐"><span>3. ClassPathResource获取文件(推荐)</span></a></h2><ul><li>读取classPaths路径下的文件</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Resource</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> resource</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ClassPathResource</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">logback.xml</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">File</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> resource2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getFile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>',25)]))}]]),n=JSON.parse('{"path":"/note_java/4z9inlqx/","title":"读取Resource目录下文件","lang":"zh-CN","frontmatter":{"title":"读取Resource目录下文件","tags":["Java","SpringBoot"],"createTime":"2024/11/16 23:08:55","permalink":"/note_java/4z9inlqx/","description":"1. 使用ResourceUtils获取 导包：import org.springframework.util.ResourceUtils; 1.1 获取文件绝对路径 先获取绝对路径地址，然后通过地址生成File文件 1.2 直接获取文件 1.1 的简略版本，省去了获取绝对路径 2. 类加载器获取 2.1 类加载器种类 引导类加载器(Bootstrap...","head":[["meta",{"property":"og:url","content":"https://www.unravely.press/note_java/4z9inlqx/"}],["meta",{"property":"og:site_name","content":"Unravely"}],["meta",{"property":"og:title","content":"读取Resource目录下文件"}],["meta",{"property":"og:description","content":"1. 使用ResourceUtils获取 导包：import org.springframework.util.ResourceUtils; 1.1 获取文件绝对路径 先获取绝对路径地址，然后通过地址生成File文件 1.2 直接获取文件 1.1 的简略版本，省去了获取绝对路径 2. 类加载器获取 2.1 类加载器种类 引导类加载器(Bootstrap..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T09:48:04.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:modified_time","content":"2024-12-25T09:48:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"读取Resource目录下文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-25T09:48:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 使用ResourceUtils获取","slug":"_1-使用resourceutils获取","link":"#_1-使用resourceutils获取","children":[{"level":3,"title":"1.1 获取文件绝对路径","slug":"_1-1-获取文件绝对路径","link":"#_1-1-获取文件绝对路径","children":[]},{"level":3,"title":"1.2 直接获取文件","slug":"_1-2-直接获取文件","link":"#_1-2-直接获取文件","children":[]}]},{"level":2,"title":"2. 类加载器获取","slug":"_2-类加载器获取","link":"#_2-类加载器获取","children":[{"level":3,"title":"2.1 类加载器种类","slug":"_2-1-类加载器种类","link":"#_2-1-类加载器种类","children":[]},{"level":3,"title":"2.2 获取类加载器：","slug":"_2-2-获取类加载器","link":"#_2-2-获取类加载器","children":[]},{"level":3,"title":"2.3 通过类加载器获取资源","slug":"_2-3-通过类加载器获取资源","link":"#_2-3-通过类加载器获取资源","children":[]}]},{"level":2,"title":"3. ClassPathResource获取文件(推荐)","slug":"_3-classpathresource获取文件-推荐","link":"#_3-classpathresource获取文件-推荐","children":[]}],"readingTime":{"minutes":1.8,"words":540},"git":{"createdTime":1731778103000,"updatedTime":1735120084000,"contributors":[{"name":"banxia","email":"yutong9717@163.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/note_java/30.spring/读取Resource目录文件.md","bulletin":false}')}}]);